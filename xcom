from airflow import DAG
from airflow.operators.python import PythonOperator
from airflow.operators.bash import BashOperator
import datetime as dt
from util.settings import default_settings

default_args = {
    'start_date': dt.datetime(2020, 12, 23)
}


def download_titanic_dataset(**context):
    url = 'https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv'
    df = pd.read_csv(url)
    df.to_csv(get_path('titanic.csv'), encoding='utf-8')
    context['task_instance'].xcom_push('key1', 'my_xcom_value')

def pivot_dataset(**context):
    titanic_df = pd.read_csv(get_path('titanic.csv'))
    df = titanic_df.pivot_table(index=['Sex'],
                                columns=['Pclass'],
                                values='Name',
                                aggfunc='count').reset_index()
    df.to_csv(get_path('titanic_pivot.csv'))
    context['task_instance'].xcom_push('key2', 'my_xcom_value')


def mean_fare_per_class(**context):
    tt_df = pd.read_csv(get_path('titanic.csv'))
    df = tt_df.groupby('Pclass')['Fare'].mean()
    df.to_csv(get_path('titanic_mean_fares.csv'))
    context['task_instance'].xcom_push('key3', 'my_xcom_value')

with DAG(**default_settings()) as dag:

    first_task = BashOperator(
        task_id='first_task',
        bash_command='echo "Here we start! Info: run_id={{ run_id }} | dag_run={{ dag_run }}"'
    )


    create_titanic_dataset = PythonOperator(
        task_id='download_titanic_dataset',
        python_callable=download_titanic_dataset
    )

    pivot_titanic_dataset = PythonOperator(
        task_id='pivot_dataset',
        python_callable=pivot_dataset
    )

    mean_fares_titanic_dataset = PythonOperator(
        task_id='mean_fare_per_class',
        python_callable=mean_fare_per_class
    )

    last_task = BashOperator(
        task_id='last_task',
        bash_command='echo "Pipeline finished! Execution date is: {{ ds }}"'
    )

    first_task >> create_titanic_dataset >> mean_fares_titanic_dataset >> pivot_titanic_dataset >> last_task
   
